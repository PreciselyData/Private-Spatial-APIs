apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: spatial
  labels:
    app: spatial
spec:
  realmSelector:
    matchLabels:
      app: spatial
  client:
    clientId: spatial
    surrogateAuthRequired: false
    enabled: true
    alwaysDisplayInConsole: false
    clientAuthenticatorType: client-secret
    secret: fd17bc1d-cefc-41a3-8c50-bb545736caa6
    redirectUris:
    - "*"
    webOrigins: []
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: false
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    authorizationServicesEnabled: true
    authorizationSettings:
      allowRemoteResourceManagement: true
      decisionStrategy: "AFFIRMATIVE"
    publicClient: false
    frontchannelLogout: false
    protocol: openid-connect
    attributes:
      saml.assertion.signature: 'false'
      saml.force.post.binding: 'false'
      saml.multivalued.roles: 'false'
      saml.encrypt: 'false'
      backchannel.logout.revoke.offline.tokens: 'false'
      saml.server.signature: 'false'
      saml.server.signature.keyinfo.ext: 'false'
      exclude.session.state.from.auth.response: 'false'
      backchannel.logout.session.required: 'true'
      client_credentials.use_refresh_token: 'false'
      saml_force_name_id_format: 'false'
      saml.client.signature: 'false'
      tls.client.certificate.bound.access.tokens: 'false'
      saml.authnstatement: 'false'
      display.on.consent.screen: 'false'
      saml.onetimeuse.condition: 'false'
    authenticationFlowBindingOverrides: {}
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    protocolMappers:
    - name: Client Host
      protocol: openid-connect
      protocolMapper: oidc-usersessionmodel-note-mapper
      consentRequired: false
      config:
        user.session.note: clientHost
        id.token.claim: 'true'
        access.token.claim: 'true'
        claim.name: clientHost
        jsonType.label: String
    - name: Client IP Address
      protocol: openid-connect
      protocolMapper: oidc-usersessionmodel-note-mapper
      consentRequired: false
      config:
        user.session.note: clientAddress
        id.token.claim: 'true'
        access.token.claim: 'true'
        claim.name: clientAddress
        jsonType.label: String
    - name: Client ID
      protocol: openid-connect
      protocolMapper: oidc-usersessionmodel-note-mapper
      consentRequired: false
      config:
        user.session.note: clientId
        id.token.claim: 'true'
        access.token.claim: 'true'
        claim.name: clientId
        jsonType.label: String
    - name: User Name
      protocol: openid-connect
      protocolMapper: oidc-usermodel-property-mapper
      consentRequired: false
      config:
        userinfo.token.claim: 'true'
        user.attribute: 'username'
        id.token.claim: 'true'
        access.token.claim: 'true'
        claim.name: 'preferred_username'
        jsonType.label: String
    - name: Email
      protocol: openid-connect
      protocolMapper: oidc-usermodel-property-mapper
      consentRequired: false
      config:
        userinfo.token.claim: 'true'
        user.attribute: 'email'
        id.token.claim: 'true'
        access.token.claim: 'true'
        claim.name: 'email'
        jsonType.label: String
    defaultClientScopes:
    - admin
    - spatial-admin
    - spatial-sub-admin
    - spatial-user
    - web-origins
    - role_list
    - roles
    - profile
    - uma_protection
    - email
    optionalClientScopes:
    - address
    - phone
    - offline_access
    - microprofile-jwt
    access:
      view: true
      configure: true
      manage: true