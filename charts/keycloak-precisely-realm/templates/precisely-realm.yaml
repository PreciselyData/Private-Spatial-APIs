apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: precisely-realm
  labels:
    app: spatial
spec:
  realm:
    id: "Precisely"
    realm: "Precisely"
    enabled: True
    displayName: "Precisely"
    loginTheme: "precisely"
    accountTheme: "precisely"
    adminTheme: "precisely"
    emailTheme: "keycloak"
    roles:
      realm:
      - name: "spatial-user"
        composite: False
        clientRole: False
        containerId: "Precisely"
        attributes: {}
      - name: "admin"
        composite: False
        clientRole: False
        containerId: "Precisely"
        attributes: {}
      - name: "spatial-admin"
        composite: False
        clientRole: False
        containerId: "Precisely"
        attributes: {}
      - name: "spatial-sub-admin"
        composite: False
        clientRole: False
        containerId: "Precisely"
        attributes: {}
    clientScopes: 
    - name: "admin"
      protocol: "openid-connect"
      attributes: 
        include.in.token.scope: "true"
        display.on.consent.screen: "true"
    - name: "spatial-admin"
      protocol: "openid-connect"
      attributes: 
        include.in.token.scope: "true"
        display.on.consent.screen: "true"
    - name: "spatial-sub-admin"
      protocol: "openid-connect"
      attributes: 
        include.in.token.scope: "true"
        display.on.consent.screen: "true"
    - name: "spatial-user"
      protocol: "openid-connect"
      attributes: 
        include.in.token.scope: "true"
        display.on.consent.screen: "true"
    - name: roles
      protocol: openid-connect
      description: OpenID Connect scope for add user roles to the access token
      attributes:
        include.in.token.scope: "false"
        display.on.consent.screen: "true"
        consent.screen.text: "${rolesScopeConsentText}"
      protocolMappers:
      - name: "client roles"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-client-role-mapper
        consentRequired: false
        config:
          multivalued: "true"
          userinfo.token.claim: "true"
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: resource_access.${client_id}.roles
          jsonType.label: String
      - name: "realm roles"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-realm-role-mapper
        consentRequired: false
        config:
          multivalued: "true"
          userinfo.token.claim: "true"
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: realm_access.roles
          jsonType.label: String
    scopeMappings:
    - clientScope: "admin"
      roles:
      - "admin"
    - clientScope: "spatial-admin"
      roles:
      - "spatial-admin"
    - clientScope: "spatial-sub-admin"
      roles:
      - "spatial-sub-admin"
    - clientScope: "spatial-user"
      roles:
      - "spatial-user"
      - "admin"
      - "spatial-admin"
      - "spatial-sub-admin"
  instanceSelector:
    matchLabels:
      app: spatial